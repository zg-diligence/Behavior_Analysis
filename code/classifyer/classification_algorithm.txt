节目分类基本步骤:

一.预处理阶段 extract_channel_programs.py
    1.1 从源数据提取所有有用条目, 包括序号为21,97,6,13,14,17,23的所有事件
    1.2 进一步分别提取所有频道, 节目, 以及<频道,节目>元组
    1.3 统计所有频道
      1.3.1 对频道名称进行预处理, 除去包含乱码的非法频道, 合并同一频道的高清版本等
      1.3.2 对现有频道进行分析, 提取节目类型单一的频道, 如中央音乐, xx影院等
    1.4 统计所有节目
        对节目名称进行预处理, 主要包括以下方面:
          过滤包含乱码的节目
          移除节目名称中的节目标志, 如现场直播,复播,重播,杜比,限免等
          移除节目名称中的所有标点符号和空格
          移除节目名称中的剧集标志, 如数字序号,第xx集等
          移除节目名称中出现的年份, 日期等

二.分类阶段
    2.1 第一阶段 program_first_classifyer.py
      step1 '金标准'分类 	分类标志 2None 		相关folder 'gold programs'
        从优酷,爱奇艺,腾讯,星辰影院等视频网站上爬取各个类别的节目, 进行同样的预处理
        对每一个待分类节目, 通过计算字符串之间的相似度, 从'金标准'中匹配最可能的节目, 将其类型作为待分类节目的类型
      
	  step2 关键词分类 分类标志 1None 		相关file basic_categoty.py and keywords_entertainment.txt
        手动建立各个类别节目的关键词库, 选取各类别节目常出现的词汇或者短语, 主要包括体育,戏曲,科教等类别
        对每一个待分类节目, 如果节目名称包含关键词库中的关键词, 则将对应的类型作为待分类节目的类型
      
	  step3 频道分类 	分类标志 频道名称 		相关file basic_category.py
        预处理阶段已将节目类型单一的频道提出来, 并分类映射到各个类别
        对每一个<频道,节目>元组, 如果节目未分类, 则查看其对应的频道是否为单一节目类型, 如果是则将频道对应的类型作为待分类节目的类型
	
	分类结果 => 已分类 20499; 未分类 12358

    2.2 第二阶段 file program_second_classifyer.py
      step1 提取待分类节目的公共前缀
        将带分类节目进行排序, 提取公共前缀, 前缀长度至少为3, 此类前缀大多为电视剧,纪实,科教等系列节目的名称

      step2 '金标准'分类 	分类标志 1prefix
        对步骤一中提取出的前缀, 进行'金标准'分类, 具体规则同第一阶段, 将能够分类的前缀类别作为其所有对应节目的类别

      step3 爬虫分类 		分类标志 2prefix
        对于步骤2中不能进行分类的前缀, 在 http://www.tvmao.com 网站上进行搜索, 收集所有搜索结果
        对每一个得到搜索结果的前缀, 从其对应的搜索结果列表中匹配相似的节目, 相似度最低阈值为0.93,
        进一步在网站上爬取匹配节目的分类信息或者节目简介, 从而对匹配节目进行分类, 将匹配节目的类别作为待分类节目的类别
	
	分类结果 => 已分类 23072; 未分类 9785

    2.3 第三阶段 分类标志 1similarity 	  相关file program_third_classifyer.py
       在第二阶段节目分类结束后, 得到两个节目集合, 已分类节目列表和未分类节目列表
       对每一个未分类节目, 计算其与所有已分类节目名称的相似度, 选取前5个节目,
       投票决定待分类节目的类别, 如果在投票结果类别对应的匹配节目中, 与待分类节目相似度最高者未达到0.9,
       则分类失败, 否则将投票结果类别作为待分类节目的类别

	分类结果 => 已分类 23981; 未分类 8876

    2.4 第四阶段 file program_fourth_classifyer.py
       在前三个阶段节目分类结束后, 未分类节目数目约为8900, 相比最初的33000, 大多数节目类别已定
       step1 关键词分类	分类标志 post
         第一阶段中由于节目数量巨大, 关键词限制相对严格, 本次主要针对新闻,财经,美食等类别, 具体规则同第一阶段
       step2 短节目爬虫分类	分类标志 short	
         对于未分类中短节目, 节目名称的限制在3-6, 这些节目主要是预处理之后的电视剧,电影,纪实等类别,
         节目名称较为特殊, 无法与已分类节目进行较好的匹配, 因此对此类节目进行爬虫分类, 具体规则同第三阶段

	分类结果 => 已分类 25577; 未分类 7322
 
   2.5 第五阶段 file program_third_classifyer.py
      step1 第一次相似度匹配 分类标志 [123]similarity
        具体规则同第四阶段, 相似度阈值更改为0.6

	分类结果 已分类 31503; 未分类 1396

      step2 第二次相似度匹配 分类标志 dev_[1234]smilarity dev代表分类准确性最低
        具体规则同第四阶段, 但考虑到剩余节目主要是新闻,综艺,生活,健康等类别的节目, 应对进行匹配的节目类别进行限制,
        除去电影,电视剧,纪实,少儿等类别的节目, 此次分类将完成所有节目的分类

	分类结果 已分类 32889; 未分类 0

    说明:
    1.在第四阶段中进行相似度匹配, 阈值设为0.9, 节目分类准确率较高
    2.在第五阶段中迭代进行相似度匹配, 主要考虑到单次匹配相似度低于0.6的节目主要为新闻,综艺类节目,
      并且其最佳匹配可能在相似度更高的未分类节目中, 因此进行迭代匹配能一定程度提高分类准确率
    3.不同阶段,不同方式的节目分类结果均做出了相应的标记, 不同阶段,不同方式的分类准确率略有差别

三.几个思路
    1.改进相似度计算算法
      当前算法为jaro_winkler, 该算法以字为单位, 会增加公共前缀/后缀的权重, 所以具有公共前缀/后缀的字符串的相似度会更高
      但是, 当节目名称中包含连续数字或字母时, 会影响字符串的匹配, 可以考虑降低数字或字母的权重, 或者直接除去
    2.改进相似度匹配算法
      首先, 当前算法主要采用权重投票方式, 首先获取所有已分类节目相似度最高的5个节目, 相似度越高的节目头投票权重越大, 可以考虑调整参与投票的节目数目或者改进投票规则
      其次, 当前算法是单一节目匹配, 可以考虑将已分类节目和未分类节目进行聚类, 设置类间相似度最低阈值, 然后对聚类结果进行相似度匹配, 将匹配结果作为所有类内节目的类别, 这样对于电视剧,科教,纪实,少儿等剧集类节目分类可能效果更好
    3.通过聚类纠正分类结果
      由于分类阶段,分类方式的不同, 相似节目可能具有不同类别, 其中必然有一些分类不准确,
      在第四阶段分类结束后, 已分类结果准确率相对较高, 可以考虑在此时对已分类节目进行聚类, 设置类内相似度最低阈值,
      然后在类内根据不同分类方式, 不同分类分类阶段进行权重投票, 决定类内所有节目的最终类别, 这样可以提高剧集类节目的分类准确率

